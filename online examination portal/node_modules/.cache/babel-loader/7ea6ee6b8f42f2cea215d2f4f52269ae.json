{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\1-ReactFullStackApplication-master\\\\online exam system\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  // ---------------------------------------------------------\n  let {\n    id\n  } = useParams();\n  let {\n    category\n  } = useParams();\n  const [allQuestions, setAllQuestions] = useState([]);\n  useEffect(() => {\n    async function getAllQuestions() {\n      let value = await axios.get(\"http://localhost:3333/question\");\n      setAllQuestions(value.data);\n    }\n\n    getAllQuestions();\n  }, []); // ---------------------------------------------------------\n  // const [userAnswer , setUserAnswer] = useState({\n  //     answer1:\"\",\n  //     answer2:\"\",\n  //     answer3:\"\",\n  // });\n\n  const [answer, setAnswer] = useState({\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    answer5: \"\"\n  });\n  let correctAnswer = [];\n\n  function onRadioButtonChange(e) {\n    setAnswer({ ...answer,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  let count = 0;\n\n  async function submitTest() {\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (parseInt(allQuestions[i].exam_id) === parseInt(id)) {\n        correctAnswer.push(allQuestions[i].question_answer);\n      }\n    } // console.log(answer);\n    // console.log(correctAnswer);\n\n\n    let score = 0;\n    let status = \"\";\n    if (correctAnswer[0] === answer.answer1) score++;\n    if (correctAnswer[1] === answer.answer2) score++;\n    if (correctAnswer[2] === answer.answer3) score++;\n    if (correctAnswer[3] === answer.answer4) score++;\n    if (correctAnswer[4] === answer.answer5) score++; // console.log(score);\n\n    if (score >= 3) status = \"Pass\";else status = \"Fail\";\n    var date = new Date();\n    var d = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n    var t = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    let data = {\n      \"result_status\": status,\n      \"result_score\": score,\n      \"user_email\": sessionStorage.getItem(\"user\"),\n      \"exam_date\": d + \" \" + t,\n      \"exam_name\": category,\n      \"total_marks\": \"5\",\n      \"exam_id\": id,\n      \"total_Question\": \"5\"\n    };\n    await axios.post(\"http://localhost:3333/result\", data);\n    history.push(\"/StudentDashboard/Result\");\n  }\n\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.displayBoxQuestionHeadingBox,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answer all the questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), allQuestions.map((data, i) => {\n      if (parseInt(data.exam_id) === parseInt(id)) {\n        count++;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: style.displayBoxQuestionBox,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: style.divQuestion,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.question_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 54\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onRadioButtonChange(e),\n              value: data.option_one,\n              id: style.option1,\n              name: \"answer\" + count,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"option1\",\n              children: data.option_one\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onRadioButtonChange(e),\n              value: data.option_two,\n              id: style.option2,\n              name: \"answer\" + count,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"option2\",\n              children: data.option_two\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onRadioButtonChange(e),\n              value: data.option_three,\n              id: style.option3,\n              name: \"answer\" + count,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"option3\",\n              children: data.option_three\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onRadioButtonChange(e),\n              value: data.option_four,\n              id: style.option4,\n              name: \"answer\" + count,\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"option4\",\n              children: data.option_four\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.submitExam,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTest,\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Test, \"fcfHwKRCPWFNjiIYbUIIv2dLSVk=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/1-ReactFullStackApplication-master/online exam system/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"names":["axios","React","useState","useEffect","useHistory","useParams","style","Test","id","category","allQuestions","setAllQuestions","getAllQuestions","value","get","data","answer","setAnswer","answer1","answer2","answer3","answer4","answer5","correctAnswer","onRadioButtonChange","e","target","name","count","submitTest","i","length","parseInt","exam_id","push","question_answer","score","status","date","Date","d","getDate","getMonth","getFullYear","t","getHours","getMinutes","getSeconds","sessionStorage","getItem","post","history","displayBoxQuestionHeadingBox","map","displayBoxQuestionBox","divQuestion","question_name","option_one","option1","option_two","option2","option_three","option3","option_four","option4","submitExam"],"mappings":"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","sourcesContent":["\r\n\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport style from \"../StudentDashboard.module.css\";\r\n\r\nfunction Test() {\r\n\r\n    // ---------------------------------------------------------\r\n    let { id } = useParams();\r\n    let { category } = useParams();\r\n\r\n    const [allQuestions , setAllQuestions] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function getAllQuestions(){\r\n            let value = await axios.get(\"http://localhost:3333/question\");\r\n            setAllQuestions(value.data);\r\n        }\r\n        getAllQuestions();\r\n    },[]);\r\n\r\n    // ---------------------------------------------------------\r\n    \r\n    // const [userAnswer , setUserAnswer] = useState({\r\n    //     answer1:\"\",\r\n    //     answer2:\"\",\r\n    //     answer3:\"\",\r\n    // });\r\n\r\n    const [answer , setAnswer] = useState({\r\n        answer1:\"\",\r\n        answer2:\"\",\r\n        answer3:\"\",\r\n        answer4:\"\",\r\n        answer5:\"\",\r\n    });\r\n\r\n\r\n    let  correctAnswer  = [] ;\r\n    \r\n    function onRadioButtonChange(e){\r\n       setAnswer({\r\n            ...answer, \r\n            [e.target.name] : e.target.value\r\n    });\r\n      \r\n       \r\n    }\r\n\r\n    let count = 0;\r\n\r\n    \r\n\r\n\r\n    async function submitTest()\r\n    {\r\n        for(let i=0; i<allQuestions.length ;i++)\r\n        {\r\n            if(parseInt( allQuestions[i].exam_id) === parseInt( id)) {\r\n                 correctAnswer.push( allQuestions[i].question_answer);\r\n            }\r\n        }\r\n\r\n\r\n        // console.log(answer);\r\n        // console.log(correctAnswer);\r\n\r\n        let score = 0;\r\n        let status = \"\";\r\n\r\n        \r\n            if(correctAnswer[0] === answer.answer1) score++;\r\n            if(correctAnswer[1] === answer.answer2) score++;\r\n            if(correctAnswer[2] === answer.answer3) score++;\r\n            if(correctAnswer[3] === answer.answer4) score++;\r\n            if(correctAnswer[4] === answer.answer5) score++;\r\n        \r\n        // console.log(score);\r\n  \r\n         if(score >= 3) status=\"Pass\";\r\n         else status = \"Fail\";\r\n\r\n        \r\n\r\n\r\n        var date = new Date();\r\n        var d =  date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear() ;\r\n        var t =  date.getHours() + \":\" + date.getMinutes() +  \":\" + date.getSeconds() ;\r\n   \r\n       let data={\r\n         \"result_status\": status,\r\n         \"result_score\": score,\r\n         \"user_email\":sessionStorage.getItem(\"user\"),\r\n         \"exam_date\": d+\" \"+t,\r\n         \"exam_name\": category,\r\n         \"total_marks\": \"5\",\r\n         \"exam_id\": id,\r\n         \"total_Question\": \"5\"\r\n       };\r\n \r\n        await axios.post(\"http://localhost:3333/result\" , data);\r\n        history.push(\"/StudentDashboard/Result\");\r\n    }\r\n\r\n     let history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <div id={style.displayBoxQuestionHeadingBox}>\r\n                <h1>Answer all the questions</h1>\r\n            </div>\r\n            {\r\n                 \r\n                allQuestions.map((data , i) => {\r\n                    if(parseInt( data.exam_id ) === parseInt(id)){\r\n                        count++;\r\n                    return (\r\n                        <div id={style.displayBoxQuestionBox} key={i}>\r\n                        <div id={style.divQuestion}> <span>{data.question_name}</span> </div>\r\n        \r\n                        <div>\r\n                            <input onChange={(e) => onRadioButtonChange(e)} value={data.option_one}\r\n                            id={style.option1} name={\"answer\"+count}   type=\"radio\" />  \r\n                            <label htmlFor=\"option1\">{data.option_one}</label>\r\n                        </div>\r\n        \r\n                        <div>\r\n                            <input onChange={(e) => onRadioButtonChange(e)} value={data.option_two}\r\n                            id={style.option2} name={\"answer\"+count} type=\"radio\" /> \r\n                            <label htmlFor=\"option2\">{data.option_two}</label>\r\n                        </div>\r\n        \r\n                        <div>\r\n                            <input onChange={(e) => onRadioButtonChange(e)} value={data.option_three}\r\n                            id={style.option3} name={\"answer\"+count}  type=\"radio\" /> \r\n                            <label htmlFor=\"option3\">{data.option_three}</label>\r\n                        </div>\r\n        \r\n                        <div>\r\n                            <input onChange={(e) => onRadioButtonChange(e)} value={data.option_four}\r\n                            id={style.option4} name={\"answer\"+count}  type=\"radio\" /> \r\n                            <label htmlFor=\"option4\">{data.option_four}</label>\r\n                        </div>\r\n                    </div>\r\n                    );\r\n                  }\r\n                  return <React.Fragment key={i}></React.Fragment>\r\n                })\r\n            }\r\n            <div id={style.submitExam}><button onClick={submitTest}>Submit Exam</button></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Test"]},"metadata":{},"sourceType":"module"}