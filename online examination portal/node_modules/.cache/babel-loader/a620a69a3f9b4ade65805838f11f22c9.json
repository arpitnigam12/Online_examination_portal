{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\1-ReactFullStackApplication-master\\\\online exam system\\\\src\\\\Components\\\\StudentComponent\\\\StudentSignup\\\\StudentSignup.js\",\n  _s = $RefreshSig$();\n// Import necessary modules and components from external libraries and files\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Logo from \"../assets/image-removebg-preview (44).png\"; // Importing an image\nimport axios from \"axios\"; // Importing Axios for making HTTP requests\nimport { registerRoute } from \"../utils/APIRoutes\"; // Importing a custom API route configuration\n\n// Define a functional component named \"Register\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // Create a navigation function using React Router's useNavigate hook\n  const navigate = useNavigate();\n\n  // Initialize state for form input values\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  // Configuration options for toast notifications\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n\n  // useEffect hook that runs when the component mounts\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Validate form input data\n    if (handleValidation()) {\n      const {\n        password,\n        username,\n        email\n      } = values;\n      try {\n        // Send a POST request to the registration route with user data\n        const {\n          data\n        } = await axios.post(registerRoute, {\n          username,\n          email,\n          password\n        });\n\n        // Handle the response data\n        if (data.status === false) {\n          toast.error(data.msg, toastOptions);\n        }\n        if (data.status === true) {\n          // Store user data in local storage and navigate to '/chat'\n          localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\n          navigate(\"/chat\");\n        }\n      } catch (error) {\n        // Handle network errors or other unexpected errors here\n        console.error(\"Error:\", error);\n        toast.error(\"An unexpected error occurred\", toastOptions);\n      }\n    }\n  };\n\n  // Function to validate form input\n  const handleValidation = () => {\n    const {\n      password,\n      confirmPassword,\n      username,\n      email\n    } = values;\n    if (password !== confirmPassword) {\n      toast.error(\"Password and Confirm Password should be the same\", toastOptions);\n      return false;\n    } else if (username.length < 3) {\n      toast.error(\"Username should be greater than 3 characters\", toastOptions);\n      return false;\n    } else if (password.length < 8) {\n      toast.error(\"Password should be equal to or greater than 8 characters\", toastOptions);\n      return false;\n    } else if (email === \"\") {\n      toast.error(\"Email is required\", toastOptions);\n      return false;\n    }\n    return true;\n  };\n\n  // Function to handle input changes and update state\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Render the JSX for the component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => handleSubmit(event),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Logo,\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"SNAPIFY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          onChange: e => handleChange(e),\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          onChange: e => handleChange(e),\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => handleChange(e),\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"confirmPassword\",\n          onChange: e => handleChange(e),\n          value: values.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"CREATE USER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"ALREADY HAVE AN ACCOUNT? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n// Styled component for styling the registration form\n_s(Register, \"UasHWZttOwTJy2aT3N9BwHVArL8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nconst FormContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: rgb(0,0,0);\nbackground: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 12%, rgba(194,8,8,1) 100%);\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n\n    img {\n      height: 5rem;\n    }\n    h1 {\n      color: white;\n      text-transform: uppercase;\n      margin: 0;\n    }\n  }\n\n  form {\n    width: 400px;\n    padding: 2rem;\n    background: #121313;\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3), 0 0 30px rgba(255, 255, 255, 0.2);\n    border: 2px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    align-items: center;\n\n    input {\n      padding: 13px;\n      border: 0.15rem solid #FFFFFF;\n      background-color: transparent;\n      border-radius: 6px;\n      color: white;\n      width: 100%;\n      font-size: 0.9rem;\n    }\n    &:focus {\n      border: 0.1rem solid #997af0;\n      outline: none;\n    }\n\n    button {\n      padding: 13px;\n      background-color: #8B0000;\n      color: white;\n      border: none;\n      width: 24.5vw;\n      border-radius: 6px;\n      font-weight: bold;\n      font-size: 1rem;\n      cursor: pointer;\n      transition: background-color 0.3s ease, transform 0.2s ease;\n    }\n\n    button:hover {\n      background-color: #002299;\n      transform: scale(1.05);\n    }\n\n    span {\n      color: white;\n      font-size: 14px;\n    }\n\n    span a {\n      color: #00ccff;\n      text-decoration: none;\n    }\n  }\n`;\n_c2 = FormContainer;\nexport default Register;\nvar _c, _c2;\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"FormContainer\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","styled","ToastContainer","toast","Logo","axios","registerRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","values","setValues","username","email","password","confirmPassword","toastOptions","position","autoClose","pauseOnHover","draggable","theme","handleSubmit","event","preventDefault","handleValidation","data","post","status","error","msg","localStorage","setItem","JSON","stringify","user","console","length","handleChange","target","name","value","children","FormContainer","onSubmit","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","to","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/1-ReactFullStackApplication-master/online exam system/src/Components/StudentComponent/StudentSignup/StudentSignup.js"],"sourcesContent":["// Import necessary modules and components from external libraries and files\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Logo from \"../assets/image-removebg-preview (44).png\"; // Importing an image\r\nimport axios from \"axios\"; // Importing Axios for making HTTP requests\r\nimport { registerRoute } from \"../utils/APIRoutes\"; // Importing a custom API route configuration\r\n\r\n// Define a functional component named \"Register\"\r\nfunction Register() {\r\n    // Create a navigation function using React Router's useNavigate hook\r\n    const navigate = useNavigate()\r\n\r\n    // Initialize state for form input values\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    // Configuration options for toast notifications\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"dark\",\r\n    }\r\n\r\n    // useEffect hook that runs when the component mounts\r\n   \r\n    // Function to handle form submission\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Validate form input data\r\n        if (handleValidation()) {\r\n            const { password, username, email } = values;\r\n            try {\r\n                // Send a POST request to the registration route with user data\r\n                const { data } = await axios.post(registerRoute, {\r\n                    username,\r\n                    email,\r\n                    password,\r\n                });\r\n\r\n                // Handle the response data\r\n                if (data.status === false) {\r\n                    toast.error(data.msg, toastOptions);\r\n                }\r\n\r\n                if (data.status === true) {\r\n                    // Store user data in local storage and navigate to '/chat'\r\n                    localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\r\n                    navigate(\"/chat\");\r\n                }\r\n            } catch (error) {\r\n                // Handle network errors or other unexpected errors here\r\n                console.error(\"Error:\", error);\r\n                toast.error(\"An unexpected error occurred\", toastOptions);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Function to validate form input\r\n    const handleValidation = () => {\r\n        const { password, confirmPassword, username, email } = values;\r\n        if (password !== confirmPassword) {\r\n            toast.error(\"Password and Confirm Password should be the same\", toastOptions);\r\n            return false;\r\n        } else if (username.length < 3) {\r\n            toast.error(\"Username should be greater than 3 characters\", toastOptions);\r\n            return false;\r\n        } else if (password.length < 8) {\r\n            toast.error(\"Password should be equal to or greater than 8 characters\", toastOptions);\r\n            return false;\r\n        } else if (email === \"\") {\r\n            toast.error(\"Email is required\", toastOptions);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Function to handle input changes and update state\r\n    const handleChange = (event) => {\r\n        setValues({ ...values, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    // Render the JSX for the component\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <form onSubmit={(event) => handleSubmit(event)}>\r\n                    <div className=\"brand\">\r\n                        <img src={Logo} alt=\"Logo\" />\r\n                        <h1>SNAPIFY</h1>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        value={values.username}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        value={values.email}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        value={values.password}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        value={values.confirmPassword}\r\n                    />\r\n                    <button type=\"submit\">CREATE USER</button>\r\n                    <span>\r\n                        ALREADY HAVE AN ACCOUNT? <Link to=\"/login\">LOGIN</Link>\r\n                    </span>\r\n                </form>\r\n            </FormContainer>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n}\r\n\r\n// Styled component for styling the registration form\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgb(0,0,0);\r\nbackground: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 12%, rgba(194,8,8,1) 100%);\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  form {\r\n    width: 400px;\r\n    padding: 2rem;\r\n    background: #121313;\r\n    border-radius: 20px;\r\n    backdrop-filter: blur(10px);\r\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3), 0 0 30px rgba(255, 255, 255, 0.2);\r\n    border: 2px solid rgba(0, 0, 0, 0.2);\r\n    transition: all 0.3s ease;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    align-items: center;\r\n\r\n    input {\r\n      padding: 13px;\r\n      border: 0.15rem solid #FFFFFF;\r\n      background-color: transparent;\r\n      border-radius: 6px;\r\n      color: white;\r\n      width: 100%;\r\n      font-size: 0.9rem;\r\n    }\r\n    &:focus {\r\n      border: 0.1rem solid #997af0;\r\n      outline: none;\r\n    }\r\n\r\n    button {\r\n      padding: 13px;\r\n      background-color: #8B0000;\r\n      color: white;\r\n      border: none;\r\n      width: 24.5vw;\r\n      border-radius: 6px;\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease, transform 0.2s ease;\r\n    }\r\n\r\n    button:hover {\r\n      background-color: #002299;\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    span {\r\n      color: white;\r\n      font-size: 14px;\r\n    }\r\n\r\n    span a {\r\n      color: #00ccff;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}